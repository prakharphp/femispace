# Generated by Django 3.2 on 2021-05-25 17:48

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('health', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('food', '0001_initial'),
        ('master', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivityMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100, verbose_name='Activity Title')),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
            ],
        ),
        migrations.CreateModel(
            name='Day',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('activity', models.ManyToManyField(blank=True, to='activity.ActivityMaster')),
                ('breakfast_meal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='breakfast', to='food.meal')),
                ('brunch_meal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='brunch', to='food.meal')),
                ('dinner_meal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='dinner', to='food.meal')),
                ('eve_snacks_meal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eve_snack', to='food.meal')),
            ],
        ),
        migrations.CreateModel(
            name='SugarIntakeActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_actual', models.BooleanField(default=False)),
                ('sugar_consumed', models.PositiveSmallIntegerField(default=0)),
                ('calories_gained', models.PositiveSmallIntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('dessert_snacks', models.ManyToManyField(blank=True, related_name='dessert_snacks_user', to='food.Food')),
                ('dried_fruit', models.ManyToManyField(blank=True, related_name='dry_fruit_user', to='food.Food')),
                ('drink_juice', models.ManyToManyField(blank=True, related_name='drink_juice_user', to='food.Food')),
                ('fruit', models.ManyToManyField(blank=True, related_name='fruit_user', to='food.Food')),
                ('sweet_veggies', models.ManyToManyField(blank=True, related_name='sweet_vaggies_user', to='food.Food')),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('days', models.ManyToManyField(to='activity.Day')),
                ('preferred_for', models.ManyToManyField(blank=True, to='health.WellnessArea')),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
            ],
        ),
        migrations.CreateModel(
            name='MeditationActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('duration_min', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('calories_burn', models.PositiveIntegerField(blank=True, null=True)),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
            ],
        ),
        migrations.CreateModel(
            name='ExerciseActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_actual', models.BooleanField(default=False)),
                ('duration', models.PositiveSmallIntegerField(default=90)),
                ('met', models.FloatField(default=0)),
                ('calories', models.PositiveSmallIntegerField(default=200)),
                ('feeling', models.CharField(blank=True, choices=[('GE', 'Great And Easy'), ('NR', 'Normal'), ('HR', 'Hard'), ('EX', 'Exhausted'), ('SI', 'Sick')], max_length=2, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='EatRainbowMaster',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('red_serving', models.PositiveSmallIntegerField(default=0)),
                ('cream_serving', models.PositiveSmallIntegerField(default=0)),
                ('yellow_serving', models.PositiveSmallIntegerField(default=0)),
                ('kiwi_serving', models.PositiveSmallIntegerField(default=0)),
                ('blue_serving', models.PositiveSmallIntegerField(default=0)),
                ('green_serving', models.PositiveSmallIntegerField(default=0)),
                ('eat_avoid', models.ManyToManyField(blank=True, related_name='eat_avoid_master', to='food.Food', verbose_name='Avoid eat')),
                ('eat_less', models.ManyToManyField(blank=True, related_name='eat_less_master', to='food.Food')),
                ('eat_more', models.ManyToManyField(blank=True, related_name='eat_more_master', to='food.Food')),
                ('enjoy_regular', models.ManyToManyField(blank=True, related_name='enjoy_regular_master', to='food.Food')),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
            ],
        ),
        migrations.CreateModel(
            name='EatRainbowActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_actual', models.BooleanField(default=False)),
                ('red_serving', models.PositiveSmallIntegerField(default=0)),
                ('cream_serving', models.PositiveSmallIntegerField(default=0)),
                ('yellow_serving', models.PositiveSmallIntegerField(default=0)),
                ('kiwi_serving', models.PositiveSmallIntegerField(default=0)),
                ('blue_serving', models.PositiveSmallIntegerField(default=0)),
                ('green_serving', models.PositiveSmallIntegerField(default=0)),
                ('eat_avoid', models.ManyToManyField(blank=True, related_name='eat_avoid_user', to='food.Food', verbose_name='Avoid eat')),
                ('eat_less', models.ManyToManyField(blank=True, related_name='eat_less_user', to='food.Food')),
                ('eat_more', models.ManyToManyField(blank=True, related_name='eat_more_user', to='food.Food')),
                ('enjoy_regular', models.ManyToManyField(blank=True, related_name='enjoy_regular_user', to='food.Food')),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DrinkingWaterActivity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('is_actual', models.BooleanField(default=False)),
                ('water', models.PositiveSmallIntegerField(default=5)),
                ('soft_drink', models.PositiveSmallIntegerField(default=0)),
                ('smoothie', models.PositiveSmallIntegerField(default=0)),
                ('ice_tea', models.PositiveSmallIntegerField(default=0)),
                ('fruit_juice', models.PositiveSmallIntegerField(default=0)),
                ('coffee', models.PositiveSmallIntegerField(default=0)),
                ('bear', models.PositiveSmallIntegerField(default=0)),
                ('comment', models.TextField(blank=True, null=True)),
                ('tag', models.ManyToManyField(blank=True, to='master.TagMaster')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='day',
            name='evening_exercise',
            field=models.ManyToManyField(blank=True, related_name='evening_exercise_list', to='activity.ExerciseMaster'),
        ),
        migrations.AddField(
            model_name='day',
            name='lunch_meal',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lunch', to='food.meal'),
        ),
        migrations.AddField(
            model_name='day',
            name='morning_exercise',
            field=models.ManyToManyField(blank=True, related_name='morning_exercise_list', to='activity.ExerciseMaster'),
        ),
        migrations.AddField(
            model_name='day',
            name='tag',
            field=models.ManyToManyField(blank=True, to='master.TagMaster'),
        ),
    ]
